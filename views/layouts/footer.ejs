</div>



<!-- <script src="js/jquery.min.js"></script> -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="js/popper.js"></script>
<script src="js/bootstrap.min.js"></script>
<script src="js/main.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>

<script>

    var sender_id = '<%= user._id %>';
    var receiver_id;

    var socket = io('/my-connection', {
        auth: { userId: '<%= user._id %>' }
    });
</script>
<script>
    $(document).ready(function () {

        $('.user-list').click(function () {

            receiver_id = $(this).attr('data-id');

            $('.start-head').hide();
            $('.chat-section').show();

            socket.emit('existChat', { sender_id: sender_id, receiver_id: receiver_id });

        });

    });

    // update user online status
    socket.on('getOnlineUser', (data) => {

        $('#' + data.user_id + '-status').removeClass('text-danger');
        $('#' + data.user_id + '-status').addClass('text-success');

    });

    // update user offline status
    socket.on('getOfflineUser', (data) => {

        $('#' + data.user_id + '-status').removeClass('text-success');
        $('#' + data.user_id + '-status').addClass('text-danger');

    });


    $("#chat-form").submit(function (event) {

        event.preventDefault();

        var message = $('#message').val();

        $.ajax({
            url: '/saveChat',
            type: 'POST',
            data: { sender_id: sender_id, receiver_id: receiver_id, message: message },
            success: function (response) {

                if (response.success) {



                    console.log(response);

                    $('#message').val('');
                    let chat = response.data.message;

                    let html = `
                        <div class='current-user-chat text-right mx-2 p-2'>
                            <h5>`+ chat + `</h5>
                        </div>
                        `;
                    $("#chat-container").append(html);
                    socket.emit('newChat', response.data);
                    scrollChat();
                } else {
                    console.log(response.msg);

                }

            }
        })

    });

    // distance user chat
    socket.on('loadNewChat', (data) => {
        if (sender_id == data.receiver_id && receiver_id == data.sender_id) {

            let chat = data.message;
            let html = `
                    <div class='distance-user-chat mx-2 p-2'>
                       <h5>`+ chat + `</h5>
                    </div>
                    `;
            $("#chat-container").append(html);
            scrollChat();

        }

    });

    // load old chat

    socket.on('loadOldChats', (data) => {

        $("#chat-container").html('');

        var chats = data.chats;

        let html = '';
        for (let x = 0; x < chats.length; x++) {

            let addClass = '';

            if (chats[x]['sender_id'] == sender_id) {

                addClass = 'current-user-chat text-right mx-2 p-2'

            } else {
                addClass = 'distance-user-chat mx-2 p-2'

            }

            html += `

            <div class='`+ addClass + `'>
                <h5>`+ chats[x]['message'] + `</h5>
            </div>
            `;
        }
        $("#chat-container").append(html);

        scrollChat();

    });

    function scrollChat() {
        $('#chat-container').animate({

            scrollTop: $('#chat-container').offset().top + $('#chat-container')[0].scrollHeight

        }, 0);
    }
</script>
</body>

</html>